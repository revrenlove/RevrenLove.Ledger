// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevrenLove.Ledger.Persistence;

#nullable disable

namespace RevrenLove.Ledger.Persistence.SqlServer.Migrations
{
    [DbContext(typeof(LedgerDbContext))]
    partial class LedgerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinancialAccountFinancialAccountHolder", b =>
                {
                    b.Property<Guid>("FinancialAccountHoldersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FinancialAccountsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FinancialAccountHoldersId", "FinancialAccountsId");

                    b.HasIndex("FinancialAccountsId");

                    b.ToTable("FinancialAccountFinancialAccountHolder");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.FinancialAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinancialAccounts");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.FinancialAccountHolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinancialAccountHolders");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.LedgerItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("FinancialAccountHolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FinancialAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsProjection")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecurringTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAccountHolderId");

                    b.HasIndex("FinancialAccountId");

                    b.HasIndex("RecurringTransactionId");

                    b.ToTable("LedgerItems");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.RecurringTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FinancialAccountHolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FinancialAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAccountHolderId");

                    b.HasIndex("FinancialAccountId");

                    b.ToTable("RecurringTransactions");
                });

            modelBuilder.Entity("FinancialAccountFinancialAccountHolder", b =>
                {
                    b.HasOne("RevrenLove.Ledger.Entities.FinancialAccountHolder", null)
                        .WithMany()
                        .HasForeignKey("FinancialAccountHoldersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevrenLove.Ledger.Entities.FinancialAccount", null)
                        .WithMany()
                        .HasForeignKey("FinancialAccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.LedgerItem", b =>
                {
                    b.HasOne("RevrenLove.Ledger.Entities.FinancialAccountHolder", "FinancialAccountHolder")
                        .WithMany("LedgerItems")
                        .HasForeignKey("FinancialAccountHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevrenLove.Ledger.Entities.FinancialAccount", "FinancialAccount")
                        .WithMany("LedgerItems")
                        .HasForeignKey("FinancialAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevrenLove.Ledger.Entities.RecurringTransaction", "RecurringTransaction")
                        .WithMany("LedgerItems")
                        .HasForeignKey("RecurringTransactionId");

                    b.Navigation("FinancialAccount");

                    b.Navigation("FinancialAccountHolder");

                    b.Navigation("RecurringTransaction");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.RecurringTransaction", b =>
                {
                    b.HasOne("RevrenLove.Ledger.Entities.FinancialAccountHolder", "FinancialAccountHolder")
                        .WithMany()
                        .HasForeignKey("FinancialAccountHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevrenLove.Ledger.Entities.FinancialAccount", "FinancialAccount")
                        .WithMany()
                        .HasForeignKey("FinancialAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialAccount");

                    b.Navigation("FinancialAccountHolder");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.FinancialAccount", b =>
                {
                    b.Navigation("LedgerItems");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.FinancialAccountHolder", b =>
                {
                    b.Navigation("LedgerItems");
                });

            modelBuilder.Entity("RevrenLove.Ledger.Entities.RecurringTransaction", b =>
                {
                    b.Navigation("LedgerItems");
                });
#pragma warning restore 612, 618
        }
    }
}
